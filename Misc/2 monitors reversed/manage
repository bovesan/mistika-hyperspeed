#!/bin/env python

import os
import sys

USAGE = '''Usage:
manage install
manage remove
manage detect'''


if len(sys.argv) < 2:
	print USAGE
	sys.exit(1)

mode = sys.argv[1]
os.chdir(os.path.dirname(sys.argv[0]))

ITEM_PATH = os.path.abspath('2_LAYOUT.sup')
LINK_PATH = os.path.expanduser('~/MISTIKA-ENV/config/2_LAYOUT.sup')
BACKUP_PATH = os.path.expanduser('~/MISTIKA-ENV/config/2_LAYOUT.sup.stock')
DESC = '%s -> %s' % (LINK_PATH, ITEM_PATH)

def detect():
	try:
		if os.path.realpath(LINK_PATH) == os.path.realpath(ITEM_PATH):
			return True
	except OSError:
		return False

detected = detect()

if mode == 'install':
	if detected:
		print 'This configuration is already installed.'
		sys.exit(0)
	else:
		try:
			os.rename(LINK_PATH, BACKUP_PATH)
			print 'Moved %s to %s' % (LINK_PATH, BACKUP_PATH)
			os.symlink(ITEM_PATH, LINK_PATH)
			print 'Created link: %s' % DESC
			sys.exit(0)
		except OSError:
			print 'Could not create link: %s' % DESC
			sys.exit(1)

if mode == 'remove':
	if not detected:
		print 'This configuration is not installed.'
		sys.exit(0)
	else:
		if not os.path.islink(LINK_PATH):
			print 'Not a link: %s' % LINK_PATH
			sys.exit(1)
		if not os.path.exists(BACKUP_PATH):
			print 'Backup file not found: %s' % BACKUP_PATH
			print 'Aborting'
			sys.exit(1)
		try:
			os.unlink(LINK_PATH)
			print 'Removed link: %s' % LINK_PATH
		except OSError:
			print 'Error: Cannot remove link: %s' % LINK_PATH
			sys.exit(1)
		try:
			os.rename(BACKUP_PATH, LINK_PATH)
			print 'Moved %s to %s' % (BACKUP_PATH, LINK_PATH)
			sys.exit(0)
		except OSError:
			print 'Cannot restore backup: %s' % BACKUP_PATH
			sys.exit(1)

if mode == 'detect':
	if detected:
		print 'This configuration is installed:\n%s' % DESC
		sys.exit(0)
	else:
		print 'This configuration is not installed.'
		sys.exit(1)